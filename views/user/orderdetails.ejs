<%- include("partials/header") %>
<style>
    .modal {
        position: fixed; left: 50%; top: 50%; transform: translate(-50%, -50%);
        background: white; padding: 20px; border-radius: 10px; box-shadow: 0px 0px 10px gray;
        z-index: 50;
    }
    .stars { display: flex; gap: 2px; }
    .star { font-size: 30px; cursor: pointer; color: gray; transition: color 0.2s; }
    .modal-content { text-align: center; }
    textarea { width: 100%; height: 80px; margin-top: 10px; border-radius: 0.375rem; padding: 0.5rem; border: 1px solid #e5e7eb; }
    .modal-backdrop {
        position: fixed;
        inset: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 40;
    }
    .order-card {
        transition: all 0.3s ease;
    }
    .order-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }
    .status-badge {
        position: relative;
        overflow: hidden;
    }
    .status-badge::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(255,255,255,0) 40%, rgba(255,255,255,0.4) 50%, rgba(255,255,255,0) 60%);
        z-index: 1;
        animation: shimmer 2s infinite;
        transform: translateX(-100%);
    }
    @keyframes shimmer {
        100% {
            transform: translateX(100%);
        }
    }
</style>

<main class="bg-gradient-to-b from-gray-50 to-gray-100 py-10 min-h-screen">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-6xl">
        <!-- Order Header with Card Design -->
        <div class="bg-white rounded-xl shadow-md overflow-hidden mb-8 border border-gray-100">
            <div class="p-6 sm:p-8">
                <div class="flex flex-col md:flex-row md:items-center md:justify-between">
                    <div class="flex items-center">
                        <div class="h-12 w-12 rounded-full bg-indigo-100 flex items-center justify-center mr-4">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                            </svg>
                        </div>
                        <div>
                            <h1 class="text-2xl font-bold text-gray-900 sm:text-3xl">Order Details</h1>
                            <p class="mt-1 text-sm text-gray-600">
                                Order ID: <span class="font-medium text-indigo-600"><%= orders.orderId %></span>
                            </p>
                            <p class="text-xs text-gray-500">
                                Ordered on <%= new Date(orders.orderDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %>
                            </p>
                            
                        </div>
                    </div>
                    <div class="mt-4 md:mt-0">
                        <%if(orders.status==="delivered"){%>
                            <a href="/user/downloadInvoice/<%=orders._id%>" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10" />
                                </svg>
                                Download Invoice
                            </a>
                        <%}%>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Status Tracker with Enhanced Design -->
        <div class="mb-8">
            <div class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-100">
                <div class="px-6 py-5 border-b border-gray-200 bg-gray-50">
                    <h2 class="text-lg font-medium text-gray-900">Order Status</h2>
                </div>
                <div class="px-6 py-8">
                    <div class="relative">
                        <% 
                        let progressClass = "w-0"; // Default to 0% width
                    
                        if (orders.status === "processing") progressClass = "w-1/4";  // 25%
                        else if (orders.status === "shipped") progressClass = "w-3/4";  // 75%
                        else if (orders.status === "delivered") progressClass = "w-full";  // 100%
                        else if (orders.status === "cancelled" || orders.status === "returned" || orders.status === "failed") progressClass = "w-0";  
                        %>
                    
                        <div class="overflow-hidden h-3 mb-6 text-xs flex rounded-full bg-gray-200">
                            <div class="<%= progressClass %> transition-all duration-700 ease-in-out 
                                        shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center 
                                        <%= orders.status === 'cancelled' || orders.status === 'returned' ? 'bg-red-500' : 'bg-indigo-500' %>">
                            </div>
                        </div>
                        
                        <div class="flex justify-between text-xs font-medium text-gray-500">
                            <div class="text-center <%= orders.status === 'processing' || orders.status === 'shipped' || orders.status === 'delivered' ? 'text-indigo-600 font-semibold' : '' %>">
                                <div class="w-8 h-8 mb-2 rounded-full <%= orders.status === 'processing' || orders.status === 'shipped' || orders.status === 'delivered' ? 'bg-indigo-500' : 'bg-gray-300' %> mx-auto flex items-center justify-center shadow-md">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                </div>
                                <span class="block mt-1">Confirmed</span>
                                <% if (orders.status === 'processing' || orders.status === 'shipped' || orders.status === 'delivered') { %>
                                    <span class="text-xs text-gray-500 block">
                                        <%= new Date(orders.createdAt).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %>
                                    </span>
                                <% } %>
                            </div>
                            <div class="text-center <%= orders.status === 'shipped' || orders.status === 'delivered' ? 'text-indigo-600 font-semibold' : '' %>">
                                <div class="w-8 h-8 mb-2 rounded-full <%= orders.status === 'shipped' || orders.status === 'delivered' ? 'bg-indigo-500' : 'bg-gray-300' %> mx-auto flex items-center justify-center shadow-md">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path d="M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0" />
                                    </svg>
                                </div>
                                <span class="block mt-1">Shipped</span>
                                <% if (orders.status === 'shipped' || orders.status === 'delivered') { %>
                                    <span class="text-xs text-gray-500 block">
                                        <%= new Date(Date.now() - 2*24*60*60*1000).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %>
                                    </span>
                                <% } %>
                            </div>
                            <div class="text-center <%= orders.status === 'delivered' ? 'text-indigo-600 font-semibold' : '' %>">
                                <div class="w-8 h-8 mb-2 rounded-full <%= orders.status === 'delivered' ? 'bg-indigo-500' : 'bg-gray-300' %> mx-auto flex items-center justify-center shadow-md">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                                    </svg>
                                </div>
                                <span class="block mt-1">Delivered</span>
                                <% if (orders.status === 'delivered') { %>
                                    <span class="text-xs text-gray-500 block">
                                        <%= new Date(Date.now()).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %>
                                    </span>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    
                    <% if (orders.status === "cancelled" || orders.status === "returned") { %>
                        <div class="mt-6 bg-red-50 border border-red-200 rounded-lg p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                    </svg>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-red-800">
                                        <% if (orders.status === "cancelled") { %>
                                            Order Cancelled
                                        <% } else { %>
                                            Order Returned
                                        <% } %>
                                    </h3>
                                    <div class="mt-2 text-sm text-red-700">
                                        <% if (orders.status === "cancelled") { %>
                                            <p>This order has been cancelled. A refund will be processed to your Wallet.</p>
                                        <% } else { %>
                                            <p>This order has been returned. A refund will be processed once we receive the items.</p>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% } else if (orders.status === "failed") { %>
                        <div class="mt-6 bg-red-50 border border-red-200 rounded-lg p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                    </svg>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-red-800">Payment Failed</h3>
                                    <div class="mt-2 text-sm text-red-700">
                                        <p>The payment for this order has failed. Please try again or contact customer support.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
        
        <!-- Order Information Cards with Enhanced Design -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <!-- Customer Information -->
            <div class="order-card bg-white rounded-xl shadow-md overflow-hidden border border-gray-100 hover:border-indigo-200">
                <div class="px-6 py-4 bg-gradient-to-r from-indigo-500 to-indigo-600">
                    <h2 class="text-lg font-medium text-white flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                        Customer
                    </h2>
                </div>
                <div class="p-6">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <div class="w-12 h-12 rounded-full bg-indigo-100 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4">
                            <h3 class="text-lg font-medium text-gray-900"><%= orders.address.name %></h3>
                            <p class="mt-1 text-sm text-gray-600">
                                <span class="flex items-center mt-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                                    </svg>
                                    <%= orders.address.mobile_number %>
                                </span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Information -->
            <div class="order-card bg-white rounded-xl shadow-md overflow-hidden border border-gray-100 hover:border-indigo-200">
                <div class="px-6 py-4 bg-gradient-to-r from-indigo-500 to-indigo-600">
                    <h2 class="text-lg font-medium text-white flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                        Order Info
                    </h2>
                </div>
                <div class="p-6">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <div class="w-12 h-12 rounded-full bg-indigo-100 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4 w-full">
                            <div class="grid grid-cols-2 gap-x-4 gap-y-3 text-sm">
                                <div class="text-gray-500">Payment Method:</div>
                                <div class="text-gray-900 font-medium flex items-center">
                                    <% if (orders.paymentMethod === "COD") { %>
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
                                        </svg>
                                    <% } else { %>
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                                        </svg>
                                    <% } %>
                                    <%= orders.paymentMethod %>
                                </div>
                                
                                <div class="text-gray-500">Status:</div>
                                <div class="font-medium">
                                    <% if (orders.status === "delivered") { %>
                                        <span class="status-badge inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                            <svg class="mr-1.5 h-2 w-2 text-green-400" fill="currentColor" viewBox="0 0 8 8">
                                                <circle cx="4" cy="4" r="3" />
                                            </svg>
                                            <%= orders.status %>
                                        </span>
                                    <% } else if (orders.status === "shipped") { %>
                                        <span class="status-badge inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                            <svg class="mr-1.5 h-2 w-2 text-blue-400" fill="currentColor" viewBox="0 0 8 8">
                                                <circle cx="4" cy="4" r="3" />
                                            </svg>
                                            <%= orders.status %>
                                        </span>
                                    <% } else if (orders.status === "processing") { %>
                                        <span class="status-badge inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                            <svg class="mr-1.5 h-2 w-2 text-yellow-400" fill="currentColor" viewBox="0 0 8 8">
                                                <circle cx="4" cy="4" r="3" />
                                            </svg>
                                            <%= orders.status %>
                                        </span>
                                    <% } else if (orders.status === "cancelled") { %>
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                            <svg class="mr-1.5 h-2 w-2 text-red-400" fill="currentColor" viewBox="0 0 8 8">
                                                <circle cx="4" cy="4" r="3" />
                                            </svg>
                                            <%= orders.status %>
                                        </span>
                                    <% } else { %>
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                            <svg class="mr-1.5 h-2 w-2 text-gray-400" fill="currentColor" viewBox="0 0 8 8">
                                                <circle cx="4" cy="4" r="3" />
                                            </svg>
                                            <%= orders.status %>
                                        </span>
                                    <% } %>
                                </div>
                                
                                <div class="text-gray-500">Amount Paid:</div>
                                <div class="text-gray-900 font-medium">₹<%= orders.amountPaid.toLocaleString() %></div>
                                
                                <div class="text-gray-500">Order Date:</div>
                                <div class="text-gray-900 font-medium">
                                    <%= new Date(orders.orderDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Delivery Information -->
            <div class="order-card bg-white rounded-xl shadow-md overflow-hidden border border-gray-100 hover:border-indigo-200">
                <div class="px-6 py-4 bg-gradient-to-r from-indigo-500 to-indigo-600">
                    <h2 class="text-lg font-medium text-white flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                        </svg>
                        Delivery Address
                    </h2>
                </div>
                <div class="p-6">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <div class="w-12 h-12 rounded-full bg-indigo-100 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="  />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4">
                            <h3 class="text-sm font-medium text-gray-900 mb-1">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800">
                                    <%= orders.address.type %>
                                </span>
                            </h3>
                            <p class="text-sm text-gray-600 space-y-1">
                                <span class="flex items-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                                    </svg>
                                    <%= orders.address.district %>, <%= orders.address.city %>
                                </span>
                                <span class="flex items-center mt-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                    </svg>
                                    <%= orders.address.state %>, <%= orders.address.pinCode %>
                                </span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Items with Enhanced Design -->
        <div class="bg-white rounded-xl shadow-md overflow-hidden mb-8 border border-gray-100">
            <div class="px-6 py-5 border-b border-gray-200 bg-gray-50 flex justify-between items-center">
                <h2 class="text-lg font-medium text-gray-900">Order Items</h2>
                <div>
                    <% if (orders.status === "cancelled") { %>
                        <span class="text-sm text-gray-500 italic">Cancelled</span>
                    <% } else if (orders.status === "delivered") { %>
                        <button onclick="openReturnModal('<%= orders._id %>')"
                            class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 15v-1a4 4 0 00-4-4H8m0 0l3 3m-3-3l3-3m9 14V5a2 2 0 00-2-2H6a2 2 0 00-2 2v16l4-2 4 2 4-2 4 2z" />
                            </svg>
                            Request for Return
                        </button>
                    <% } else if (orders.status === "return request") { %>
                        <button class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-gray-200 cursor-not-allowed">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            Waiting for Approval
                        </button>
                    <% } else if (orders.status === "returned") { %>
                        <span class="text-sm text-gray-500 italic">Returned</span>
                    <% } else { %>
                        <button onclick="confirmCancelOrderStatus('<%= orders._id %>')"
                            class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors duration-200">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                            Cancel Order
                        </button>
                    <% } %>
                </div>
                
                <!-- Modal for Return Request -->
                <div id="returnModal" class="fixed inset-0 z-50 hidden">
                    <div class="modal-backdrop"></div>
                    <div class="modal">
                        <div class="bg-white rounded-lg shadow-lg p-6 w-full max-w-md">
                            <div class="flex justify-between items-center mb-4">
                                <h2 class="text-lg font-semibold text-gray-900">Return Order</h2>
                                <button onclick="closeReturnModal()" class="text-gray-400 hover:text-gray-500">
                                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                </button>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Please enter the reason for returning this order:</p>
                            <textarea id="returnReason" class="w-full p-2 border rounded-md" rows="3" placeholder="Enter your reason..."></textarea>
                            <div class="mt-4 flex justify-end space-x-2">
                                <button onclick="closeReturnModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors duration-200">
                                    Cancel
                                </button>
                                <button onclick="submitReturnRequest()" class="px-4 py-2 text-white bg-indigo-600 rounded-md hover:bg-indigo-700 transition-colors duration-200">
                                    Submit
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Unit Price</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quantity</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Action</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <% if (orders) { %>
                            <% for (let i = 0; i < orders.items.length; i++) { %>
                                <tr class="hover:bg-gray-50 transition-colors duration-150">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex-shrink-0 h-20 w-20 rounded-md overflow-hidden border border-gray-200">
                                            <img src="<%= orders.items[i].productId.images[0] %>" class="h-full w-full object-cover object-center" alt="Product image">
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900"><%= orders.items[i].productId.name %></div>
                                        
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900">₹<%= orders.items[i].itemSalePrice.toLocaleString() %></div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900"><%= orders.items[i].quantity %></div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900">₹<%= (orders.items[i].quantity * Number(orders.items[i].itemSalePrice)).toLocaleString() %>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <% if (orders.items[i].itemStatus === "cancelled") { %>
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                                <svg class="mr-1.5 h-2 w-2 text-red-400" fill="currentColor" viewBox="0 0 8 8">
                                                    <circle cx="4" cy="4" r="3" />
                                                </svg>
                                                Cancelled
                                            </span>
                                        <% } else if (orders.items[i].itemStatus === "delivered") { %>
                                            <div class="flex flex-col space-y-2">
                                                <button onclick="returnRequestItemStatus('<%= orders._id %>', '<%= orders.items[i].productId._id %>')"
                                                    class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 15v-1a4 4 0 00-4-4H8m0 0l3 3m-3-3l3-3m9 14V5a2 2 0 00-2-2H6a2 2 0 00-2 2v16l4-2 4 2 4-2 4 2z" />
                                                    </svg>
                                                    Return
                                                </button>
                                                <button onclick="openModal('<%=orders.items[i].productId._id %>')"
                                                    class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1 text-yellow-400" fill="currentColor" viewBox="0 0 24 24" stroke="none">
                                                        <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z" />
                                                    </svg>
                                                    Rate
                                                </button>
                                            </div>
                                           
                                        <% } else if (orders.items[i].itemStatus === "return request") { %>
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                                <svg class="mr-1.5 h-2 w-2 text-yellow-400" fill="currentColor" viewBox="0 0 8 8">
                                                    <circle cx="4" cy="4" r="3" />
                                                </svg>
                                                Return Requested
                                            </span>
                                        <% } else if (orders.items[i].itemStatus === "returned") { %>
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                                <svg class="mr-1.5 h-2 w-2 text-gray-400" fill="currentColor" viewBox="0 0 8 8">
                                                    <circle cx="4" cy="4" r="3" />
                                                </svg>
                                                Returned
                                            </span>
                                        <% } else { %>
                                            <button onclick="confirmCancelItemStatus('<%= orders._id %>', '<%= orders.items[i].productId._id %>')"
                                                class="inline-flex items-center px-3 py-2 border border-transparent text-xs leading-4 font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors duration-200">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                                </svg>
                                                Cancel
                                            </button>
                                        <% } %>
                                    </td>
                                </tr>
                            <% } %>
                        <% } %>
                    </tbody>
                </table>
                <input type="hidden" name="" id="orderId" value="<%= orders._id %>">
            </div>
        </div>

        <!-- Order Summary with Enhanced Design -->
        <div class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-100">
            <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
                <h2 class="text-lg font-medium text-gray-900">Order Summary</h2>
            </div>
            <div class="p-6">
                <div class="flow-root">
                    <dl class="-my-4 text-sm divide-y divide-gray-200">
                        <div class="py-4 flex justify-between">
                            <dt class="text-gray-600">Subtotal</dt>
                            <dd class="font-medium text-gray-900">₹<%= orders.amountPaid.toLocaleString() %></dd>
                        </div>
                        <div class="py-4 flex justify-between">
                            <dt class="text-gray-600">Shipping</dt>
                            <dd class="font-medium text-green-600">Free</dd>
                        </div>
                        <div class="py-4 flex justify-between">
                            <dt class="text-gray-600">Tax</dt>
                            <dd class="font-medium text-gray-900">Included</dd>
                        </div>
                        <div class="py-4 flex justify-between">
                            <dt class="text-base font-medium text-gray-900">Order Total</dt>
                            <dd class="text-base font-medium text-indigo-600">₹<%= orders.amountPaid.toLocaleString() %></dd>
                        </div>
                    </dl>
                </div>
            </div>
        </div>
    </div>
</main>

 <!-- modal for rating.... -->
 <div id="ratingModal" class="modal" style="display: none;">
    <div class="modal-content">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-900">Rate Your Product</h2>
            <button onclick="closeModal()" class="text-gray-400 hover:text-gray-500">
                <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>
        <div class="stars mb-4">
            <span class="star" onclick="setRating(1)">&#9733;</span>
            <span class="star" onclick="setRating(2)">&#9733;</span>
            <span class="star" onclick="setRating(3)">&#9733;</span>
            <span class="star" onclick="setRating(4)">&#9733;</span>
            <span class="star" onclick="setRating(5)">&#9733;</span>
        </div>
        <textarea id="reviewText" placeholder="Write a review..." class="border border-gray-300 rounded-md"></textarea>
        <button onclick="submitReview()" class="mt-4 w-full px-4 py-2 text-white bg-indigo-600 rounded-md hover:bg-indigo-700 transition-colors duration-200">
            Submit Review
        </button>
    </div>
</div>

<script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="assets/js/vendors/select2.min.js"></script>
<script src="assets/js/vendors/perfect-scrollbar.js"></script>
<script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
<script src="assets/js/main.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/easyinvoice/dist/easyinvoice.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
// Rating functionality
let rating = 0;
function openModal(productId) {
    console.log(productId);
    document.getElementById("ratingModal").style.display = "block";
    document.getElementById("ratingModal").dataset.productId = productId;
}
function closeModal() {
    document.getElementById("ratingModal").style.display = "none";
}
function setRating(value) {
    rating = value;
    let stars = document.querySelectorAll(".star");
    stars.forEach((star, index) => {
        star.style.color = (index < value) ? "gold" : "gray";
    });
}
async function submitReview() {
    let review = document.getElementById("reviewText").value;
    let productId = document.getElementById("ratingModal").dataset.productId;

    if (rating === 0) {
        Swal.fire({
            title: "Rating Required",
            text: "Please select at least one star before submitting!",
            icon: "warning",
            confirmButtonColor: "#4f46e5"
        });
        return;
    }
    console.log("productID:", productId, "Rating:", rating, "Review:", review);

    try {
        const response=await fetch("/user/submit-review",{
        method:"POST",
        headers: {"Content-Type": "application/json"},
        body:JSON.stringify({
            productId: productId,
            rating: rating,
            review: review
        })
    });

    const result = await response.json();
    console.log("this is result: ",result)
    if(response.ok){
        alert(result.message)
    }else{
        alert(result.message)
    }
    } catch (error) {
        console.log(error)
    }
    
    closeModal();
}

// Return Request Modal
let returnOrderId = null; // Store the order ID when opening the modal

// Open Return Request Modal
function openReturnModal(orderId) {
    returnOrderId = orderId;
    document.getElementById("returnModal").classList.remove("hidden");
}

// Close Modal
function closeReturnModal() {
    document.getElementById("returnModal").classList.add("hidden");
}

// Confirm Order Cancellation
function confirmCancelOrderStatus(orderId) {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to cancel this entire order?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#4f46e5",
        confirmButtonText: "Yes, cancel it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch("/user/cancel-order", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ orderId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "Cancelled!",
                        text: "Your order has been cancelled.",
                        icon: "success",
                        confirmButtonColor: "#4f46e5"
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: "Something went wrong.",
                        icon: "error",
                        confirmButtonColor: "#4f46e5"
                    });
                }
            })
            .catch(err => console.error(err));
        }
    });
}

// Submit Return Request
function submitReturnRequest() {
    let reason = document.getElementById("returnReason").value.trim();
    
    if (!reason) {
        Swal.fire({
            title: "Error!",
            text: "Please enter a reason for returning the order.",
            icon: "warning",
            confirmButtonColor: "#4f46e5"
        });
        return;
    }

    fetch("/user/return-request-order", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ orderId: returnOrderId, reason })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: "Requested!",
                text: "Your return request has been submitted.",
                icon: "success",
                confirmButtonColor: "#4f46e5"
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                title: "Error!",
                text: "Failed to process your request.",
                icon: "error",
                confirmButtonColor: "#4f46e5"
            });
        }
    })
    .catch(err => console.error(err));

    closeReturnModal();
}

// For item status
function confirmCancelItemStatus(orderId, productId) {
    console.log("here order id n product id", orderId, productId);
    Swal.fire({
        title: 'Confirm Cancel Item',
        text: 'Are you sure you want to cancel this item in your order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#4f46e5',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            cancelOrder(orderId, productId);
        }
    });
}

async function cancelOrder(orderId, productId) {
    try {
        const response = await fetch('/user/item-cancel', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ orderId: orderId, productId })
        });

        const result = await response.json();

        if (result.success) {
            // Show SweetAlert confirmation
            Swal.fire({
                title: "Item Cancelled!",
                text: "Your money will be refunded to your wallet.",
                icon: "success",
                confirmButtonText: "OK",
                confirmButtonColor: "#4f46e5"
            }).then(() => {
                // Reload the page after clicking OK
                window.location.reload();
            });

        } else {
            Swal.fire({
                title: "Cancellation Failed!",
                text: result.message || "Failed to cancel item.",
                icon: "error",
                confirmButtonText: "OK",
                confirmButtonColor: "#4f46e5"
            });
        }
    } catch (error) {
        console.log(error);
        Swal.fire({
            title: "Error!",
            text: "Something went wrong. Please try again.",
            icon: "error",
            confirmButtonText: "OK",
            confirmButtonColor: "#4f46e5"
        });
    }
}

function returnRequestItemStatus(orderId, productId) {
    Swal.fire({
        title: "Request Return",
        input: "textarea",
        inputPlaceholder: "Enter your reason for returning this item...",
        inputAttributes: {
            "aria-label": "Enter your reason"
        },
        showCancelButton: true,
        confirmButtonText: "Submit",
        confirmButtonColor: "#4f46e5",
        cancelButtonText: "Cancel",
        preConfirm: (reason) => {
            if (!reason) {
                Swal.showValidationMessage("Please enter a reason for return");
                return false;
            }
            return reason;
        }
    }).then((result) => {
        if (result.isConfirmed) {
            // Send the return request to the server
            fetch("/user/return-request-item", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    orderId: orderId,
                    reason: result.value,
                    productId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "Return Requested!",
                        text: "Your return request has been submitted.",
                        icon: "success",
                        confirmButtonColor: "#4f46e5"
                    });
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                } else {
                    Swal.fire({
                        title: "Error",
                        text: "Failed to request return. Please try again.",
                        icon: "error",
                        confirmButtonColor: "#4f46e5"
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: "Error",
                    text: "Something went wrong!",
                    icon: "error",
                    confirmButtonColor: "#4f46e5"
                });
            });
        }
    });
}
</script>

<%- include("partials/footer") %>