<%- include("partials/header") %>
<main class="bg-gray-50 py-8 min-h-screen">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Order Header -->
        <div class="mb-8">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between">
                <div>
                    <h1 class="text-2xl font-bold text-gray-900 sm:text-3xl">Order Details</h1>
                    <p class="mt-2 text-sm text-gray-600">
                        Order ID: <span class="font-medium text-indigo-600"><%= orders.orderId %></span>
                    </p>
                </div>
                <div class="mt-4 md:mt-0">
                    <%if(orders.status==="delivered"){%>
                        <a href="/user/downloadInvoice/<%=orders._id%>" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10" />
                            </svg>
                            Download Invoice
                        </a>
                    <%}%>
                </div>
            </div>
        </div>

        <!-- Order Status Tracker -->
        <div class="mb-8">
            <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                <div class="px-6 py-5 border-b border-gray-200">
                    <h2 class="text-lg font-medium text-gray-900">Order Status</h2>
                </div>
                <div class="px-6 py-5">
                    <div class="relative">
                        <div class="overflow-hidden h-2 mb-4 text-xs flex rounded bg-gray-200">
                            <% 
                            let progressWidth = "0%";
                            if (orders.status === "processing") progressWidth = "25%";
                            else if (orders.status === "shipped") progressWidth = "75%";
                            else if (orders.status === "delivered") progressWidth = "100%";
                            else if (orders.status === "cancelled" || orders.status === "Failed") progressWidth = "0%";
                            %>
                            <div style="width: '<%= progressWidth %>'" class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center <%= orders.status === 'cancelled' || orders.status === 'Failed' ? 'bg-red-500' : 'bg-green-500' %>"></div>
                        </div>
                        <div class="flex justify-between text-xs font-medium text-gray-500">
                            <div class="text-center <%= orders.status === 'pending' || orders.status === 'shipped' || orders.status === 'delivered' ? 'text-green-600 font-semibold' : '' %>">
                                <div class="w-6 h-6 mb-1 rounded-full bg-<%= orders.status === 'pending' || orders.status === 'shipped' || orders.status === 'delivered' ? 'green' : 'gray' %>-500 mx-auto flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                </div>
                                Confirmed
                            </div>
                            <div class="text-center <%= orders.status === 'shipped' || orders.status === 'delivered' ? 'text-green-600 font-semibold' : '' %>">
                                <div class="w-6 h-6 mb-1 rounded-full bg-<%= orders.status === 'shipped' || orders.status === 'delivered' ? 'green' : 'gray' %>-500 mx-auto flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                </div>
                                Shipped
                            </div>
                            <div class="text-center <%= orders.status === 'delivered' ? 'text-green-600 font-semibold' : '' %>">
                                <div class="w-6 h-6 mb-1 rounded-full bg-<%= orders.status === 'delivered' ? 'green' : 'gray' %>-500 mx-auto flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                </div>
                                Delivered
                            </div>
                        </div>
                    </div>
                    <% if (orders.status === "Cancelled") { %>
                        <div class="mt-4 bg-red-50 border border-red-200 rounded-md p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                    </svg>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-red-800">Order Cancelled</h3>
                                    <div class="mt-2 text-sm text-red-700">
                                        <p>This order has been cancelled.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% } else if (orders.status === "Failed") { %>
                        <div class="mt-4 bg-red-50 border border-red-200 rounded-md p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                    </svg>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-red-800">Payment Failed</h3>
                                    <div class="mt-2 text-sm text-red-700">
                                        <p>The payment for this order has failed.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- Order Information Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <!-- Customer Information -->
            <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                <div class="px-6 py-4 bg-gradient-to-r from-indigo-500 to-indigo-600">
                    <h2 class="text-lg font-medium text-white">Customer</h2>
                </div>
                <div class="p-6">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <div class="w-10 h-10 rounded-full bg-indigo-100 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4">
                            <h3 class="text-lg font-medium text-gray-900"><%= orders.address.name %></h3>
                            <p class="mt-1 text-sm text-gray-600">
                                <span class="block">Phone: <%= orders.address.mobile_number %></span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Information -->
            <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                <div class="px-6 py-4 bg-gradient-to-r from-indigo-500 to-indigo-600">
                    <h2 class="text-lg font-medium text-white">Order Info</h2>
                </div>
                <div class="p-6">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <div class="w-10 h-10 rounded-full bg-indigo-100 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4">
                            <div class="grid grid-cols-2 gap-x-4 gap-y-2 text-sm">
                                <div class="text-gray-500">Payment Method:</div>
                                <div class="text-gray-900 font-medium"><%= orders.paymentMethod %></div>
                                
                                <div class="text-gray-500">Status:</div>
                                <div class="font-medium">
                                    <% if (orders.status === "delivered") { %>
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                            <%= orders.status %>
                                        </span>
                                    <% } else if (orders.status === "shipped") { %>
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                            <%= orders.status %>
                                        </span>
                                    <% } else if (orders.status === "processing") { %>
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                            <%= orders.status %>
                                        </span>
                                    <% } else if (orders.status === "cancelled") { %>
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                            <%= orders.status %>
                                        </span>
                                    <% } else { %>
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                            <%= orders.status %>
                                        </span>
                                    <% } %>
                                </div>
                                
                                <div class="text-gray-500">Amount Paid:</div>
                                <div class="text-gray-900 font-medium">₹<%= orders.total.toLocaleString() %></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Delivery Information -->
            <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                <div class="px-6 py-4 bg-gradient-to-r from-indigo-500 to-indigo-600">
                    <h2 class="text-lg font-medium text-white">Delivery Address</h2>
                </div>
                <div class="p-6">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <div class="w-10 h-10 rounded-full bg-indigo-100 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4">
                            <h3 class="text-sm font-medium text-gray-900"><%= orders.address.type %> Address</h3>
                            <p class="mt-1 text-sm text-gray-600">
                                <%= orders.address.district %>, <%= orders.address.city %><br>
                                <%= orders.address.state %>, <%= orders.address.pinCode %>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="bg-white rounded-lg shadow-sm overflow-hidden mb-8">
            <div class="px-6 py-4 border-b border-gray-200">
                <h2 class="text-lg font-medium text-gray-900">Order Items</h2>
                <% if (orders.status === "cancelled") { %>
                    <span class="text-sm text-gray-500 italic">Cancelled</span>
                <% } else if (orders.status === "delivered") { %>
                    <button onclick="openReturnModal('<%= orders._id %>')"
                        class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        Request for Return
                    </button>
                <% } else if (orders.status === "return request") { %>
                    <button class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-gray-200 cursor-not-allowed">
                        Waiting for Approval
                    </button>
                <% } else if (orders.status === "returned") { %>
                    <span class="text-sm text-gray-500 italic">Returned</span>
                <% } else { %>
                    <button onclick="confirmCancelOrderStatus('<%= orders._id %>')"
                        class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                        Cancel Order
                    </button>
                <% } %>
                
                <!-- Modal for Return Request -->
                <div id="returnModal" class="fixed inset-0 z-50 hidden overflow-y-auto">
                    <div class="flex items-center justify-center min-h-screen px-4">
                        <div class="bg-white rounded-lg shadow-lg p-6 w-full max-w-md">
                            <h2 class="text-lg font-semibold text-gray-900 mb-4">Return Order</h2>
                            <p class="text-sm text-gray-600 mb-2">Please enter the reason for returning this order:</p>
                            <textarea id="returnReason" class="w-full p-2 border rounded-md" rows="3" placeholder="Enter your reason..."></textarea>
                            <div class="mt-4 flex justify-end space-x-2">
                                <button onclick="closeReturnModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300">
                                    Cancel
                                </button>
                                <button onclick="submitReturnRequest()" class="px-4 py-2 text-white bg-indigo-600 rounded-md hover:bg-indigo-700">
                                    Submit
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Unit Price</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quantity</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Action</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <% if (orders) { %>
                            <% for (let i = 0; i < orders.items.length; i++) { %>
                                <tr class="hover:bg-gray-50">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex-shrink-0 h-20 w-20 rounded-md overflow-hidden">
                                            <img src="<%= orders.items[i].productId.images[0] %>" class="h-full w-full object-cover object-center" alt="Product image">
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900"><%= orders.items[i].productId.name %></div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900">₹<%= orders.items[i].productId.variants[0].regularPrice.toLocaleString() %></div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900"><%= orders.items[i].quantity %></div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900">₹<%= (orders.items[i].quantity * Number(orders.items[i].productId.variants[0].regularPrice)).toLocaleString() %>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <% if (orders.items[i].itemStatus === "cancelled") { %>
                                            <span class="text-sm text-gray-500 italic">Cancelled</span>
                                        <% } else if (orders.items[i].itemStatus === "delivered") { %>
                                            
                                            <button onclick="returnRequestItemStatus('<%= orders._id %>', '<%= orders.items[i].productId._id %>')"
                                                class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                                Request for Return
                                            </button>
                                        <% } else if (orders.items[i].itemStatus === "return request") { %>
                                            <button class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-gray-200 cursor-not-allowed">
                                                Waiting for Approval
                                            </button>
                                        <% } else if (orders.items[i].itemStatus === "returned") { %>
                                            <span class="text-sm text-gray-500 italic">Returned</span>
                                        <% } else { %>
                                            <button onclick="confirmCancelItemStatus('<%= orders._id %>', '<%= orders.items[i].productId._id %>')"
                                                class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                                Cancel Order
                                            </button>
                                        <% } %>
                                    </td>
                                </tr>
                            <% } %>
                            
                           
                        <% } %>
                    </tbody>
                </table>
                <input type="hidden" name="" id="orderId" value="<%= orders._id %>">
            </div>
        </div>

        <!-- Order Summary -->
        <div class="bg-white rounded-lg shadow-sm overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-200">
                <h2 class="text-lg font-medium text-gray-900">Order Summary</h2>
            </div>
            <div class="p-6">
                <div class="flow-root">
                    <dl class="-my-4 text-sm divide-y divide-gray-200">
                        <div class="py-4 flex justify-between">
                            <dt class="text-gray-600">Subtotal</dt>
                            <dd class="font-medium text-gray-900">₹<%= orders.total.toLocaleString() %></dd>
                        </div>
                        <div class="py-4 flex justify-between">
                            <dt class="text-gray-600">Shipping</dt>
                            <dd class="font-medium text-gray-900">Free</dd>
                        </div>
                        <div class="py-4 flex justify-between">
                            <dt class="text-gray-600">Tax</dt>
                            <dd class="font-medium text-gray-900">Included</dd>
                        </div>
                        <div class="py-4 flex justify-between">
                            <dt class="text-base font-medium text-gray-900">Order Total</dt>
                            <dd class="text-base font-medium text-indigo-600">₹<%= orders.total.toLocaleString() %></dd>
                        </div>
                    </dl>
                </div>
            </div>
        </div>
    </div>
</main>

<script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="assets/js/vendors/select2.min.js"></script>
<script src="assets/js/vendors/perfect-scrollbar.js"></script>
<script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
<script src="assets/js/main.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/easyinvoice/dist/easyinvoice.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>

   
let returnOrderId = null; // Store the order ID when opening the modal

// Open Return Request Modal
function openReturnModal(orderId) {
    returnOrderId = orderId;
    document.getElementById("returnModal").classList.remove("hidden");
}

// Close Modal
function closeReturnModal() {
    document.getElementById("returnModal").classList.add("hidden");
}

// Confirm Order Cancellation
function confirmCancelOrderStatus(orderId) {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to cancel this entire order?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, cancel it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch("/user/cancel-order", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ orderId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire("Cancelled!", "Your order has been cancelled.", "success").then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire("Error!", "Something went wrong.", "error");
                }
            })
            .catch(err => console.error(err));
        }
    });
}

// Submit Return Request
function submitReturnRequest() {
    let reason = document.getElementById("returnReason").value.trim();
    
    if (!reason) {
        Swal.fire("Error!", "Please enter a reason for returning the order.", "warning");
        return;
    }

    fetch("/user/return-request-order", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ orderId: returnOrderId, reason })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire("Requested!", "Your return request has been submitted.", "success").then(() => {
                location.reload();
            });
        } else {
            Swal.fire("Error!", "Failed to process your request.", "error");
        }
    })
    .catch(err => console.error(err));

    closeReturnModal();
}




///for items statuss>>>>>>>>>>>>
function confirmCancelItemStatus(orderId, productId) {
    console.log("here order id n product id",orderId,productId)
    Swal.fire({
        title: 'Confirm Cancel Order',
        text: 'Are you sure you want to cancel this item in order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#4f46e5',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            cancelOrder(orderId, productId);
        }
    });
}

async function cancelOrder(orderId, productId) {
    try {
        const response = await fetch('/user/item-cancel', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ orderId: orderId, productId })
        });

        const result = await response.json();

        if (result.success) {
            // Show SweetAlert confirmation
            Swal.fire({
                title: "Order Cancelled!",
                text: "Your money will be refunded to your wallet.",
                icon: "success",
                confirmButtonText: "OK",
                confirmButtonColor: "#d33" // Red color for cancel confirmation
            }).then(() => {
                // Reload the page after clicking OK
                window.location.reload();
            });

        } else {
            Swal.fire({
                title: "Cancellation Failed!",
                text: result.message || "Failed to cancel order.",
                icon: "error",
                confirmButtonText: "OK"
            });
        }
    } catch (error) {
        console.log(error);
        Swal.fire({
            title: "Error!",
            text: "Something went wrong. Please try again.",
            icon: "error",
            confirmButtonText: "OK"
        });
    }
}

function returnRequestItemStatus(orderId, productId) {
    Swal.fire({
        title: "Request Return",
        input: "textarea",
        inputPlaceholder: "Enter your reason for returning this order...",
        inputAttributes: {
            "aria-label": "Enter your reason"
        },
        showCancelButton: true,
        confirmButtonText: "Submit",
        cancelButtonText: "Cancel",
        preConfirm: (reason) => {
            if (!reason) {
                Swal.showValidationMessage("Please enter a reason for return");
                return false;
            }
            return reason;
        }
    }).then((result) => {
        if (result.isConfirmed) {
            // Send the return request to the server
            fetch("/user/return-request-item", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    orderId: orderId,
                    reason: result.value,
                    productId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire("Return Requested!", "Your return request has been submitted.", "success");
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                } else {
                    Swal.fire("Error", "Failed to request return. Please try again.", "error");
                }
            })
            .catch(error => {
                Swal.fire("Error", "Something went wrong!", "error");
            });
        }
    });
}
</script>

<%- include("partials/footer") %>