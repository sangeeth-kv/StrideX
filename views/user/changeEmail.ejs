<%- include("partials/header") %>

<style>
    .email-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100vh;
        background-color: #f8f9fa;
    }

    .email-container {
        max-width: 380px;
        width: 100%;
        padding: 40px;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.2);
        text-align: center;
    }

    .email-container h3 {
        font-size: 24px;
        font-weight: bold;
        color: #333;
        margin-bottom: 20px;
    }

    .form-group {
        text-align: left;
        margin-bottom: 15px;
    }

    .form-group label {
        font-weight: 500;
        color: #555;
        display: block;
        margin-bottom: 5px;
    }

    .email-input {
        width: 100%;
        padding: 12px;
        font-size: 16px;
        border-radius: 6px;
        border: 1px solid #ced4da;
        transition: all 0.3s ease-in-out;
    }

    .email-input:focus {
        border-color: #007bff;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    .btn-primary {
        width: 100%;
        font-weight: bold;
        background-color: #007bff;
        border-color: #007bff;
        border-radius: 6px;
        padding: 12px;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .error-message {
        color: red;
        font-size: 14px;
        margin-top: 5px;
        text-align: left;
    }

    .text-muted {
        font-size: 14px;
        color: #6c757d;
        margin-top: 20px;
    }
</style>

<div class="email-wrapper">
    <div class="email-container">
        <h3>Enter New Email</h3>
        <form id="emailForm" onsubmit="return validateLoginForm(event)">
            <div class="form-group">
                <label for="email">Email Address</label>
                <input class="email-input" name="email" placeholder="Enter your email" type="text" id="email">
                <div class="error-message" id="email-error"></div>
            </div>
            <button type="submit"  class="btn btn-primary">Verify</button>
        </form>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
   async function validateLoginForm(event) {
    event.preventDefault();  // Prevent form submission

    const emailInput = document.getElementById('email');
    const emailError = document.getElementById('email-error');
    const email = emailInput.value.trim();
    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;

    // Reset previous errors
    emailError.textContent = '';
    emailInput.classList.remove('is-invalid');

    // Email validation
    if (email === '') {
        emailError.textContent = 'Please enter your email.';
        emailInput.classList.add('is-invalid');
        return false;
    } else if (!email.match(emailPattern)) {
        emailError.textContent = 'Please enter a valid email address';
        emailInput.classList.add('is-invalid');
        return false;
    }

    // Fetch request (only executes if validation passes)
    try {
        console.log("Sending request...");
        const response = await fetch("/user/change-email", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email })
        });

        const result = await response.json();
        console.log(result);

        // Handle response (redirect, success message, etc.)
        if (response.ok) {
    Swal.fire({
        icon: 'success',
        title: 'Updated!',
        text: result.message,
    }).then(() => {
        // Redirect after success
        window.location.href = result.redirectUrl; // Default to "/dashboard" if no URL is provided
    });
} else {
    Swal.fire({
        icon: 'error',
        title: 'User not found!',
        text: result.message,
    }).then(() => {
        // Redirect to login or fallback URL
        window.location.href = result.redirectUrl 
    });
}

    } catch (error) {
        console.error("Error:", error);
        emailError.textContent = "Network error. Please try again.";
    }

    return false; // Prevent form submission
}

</script>

<%- include("partials/footer") %>
