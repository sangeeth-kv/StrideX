<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>StrideX Change Password</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest"></script> <!-- Lucide Icons -->
</head>
<body class="flex items-center justify-center h-screen bg-gray-900" style="background-color: #6f8e80;">
    <div class="flex w-4/5 max-w-5xl bg-gray-800 rounded-lg shadow-lg overflow-hidden">
        <!-- Left Section (Logo) -->
        <div class="w-1/2 flex items-center justify-center p-10 bg-gray-700" style="background-color: #8FB0A1;">
            <img src="/admin/imgs/logos/logo-png.png" alt="StrideX Logo" class="w-3/4">
        </div>
        
        <!-- Right Section (Change Password Form) -->
        <div class="w-1/2 p-10 flex flex-col justify-center text-white" style="background-color: #8FB0A1;">
            <h2 class="text-3xl font-bold mb-6 text-center" style="color: rgb(251, 223, 223);">Change Your Password</h2>
            <form id="changePasswordForm" onsubmit="changePassword(event)">
                <!-- New Password Field -->
                <div class="mb-4 relative">
                    <input type="password" id="newPassword" name="newPassword" placeholder="Enter New Password"
                        class="w-full px-4 py-3 pr-12 rounded-md bg-gray-600 text-white placeholder-gray-400">
                    <button type="button" class="absolute inset-y-0 right-3 flex items-center justify-center w-10 h-10 bg-transparent rounded-full hover:bg-gray-700 transition duration-200"
                        onclick="togglePassword('newPassword', 'eyeNew')">
                        <i id="eyeNew" data-lucide="eye" class="w-6 h-6 text-white"></i>
                    </button>
                </div>

                <!-- Confirm Password Field -->
                <div class="mb-4 relative">
                    <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm New Password"
                        class="w-full px-4 py-3 pr-12 rounded-md bg-gray-600 text-white placeholder-gray-400">
                    <button type="button" class="absolute inset-y-0 right-3 flex items-center justify-center w-10 h-10 bg-transparent rounded-full hover:bg-gray-700 transition duration-200"
                        onclick="togglePassword('confirmPassword', 'eyeConfirm')">
                        <i id="eyeConfirm" data-lucide="eye" class="w-6 h-6 text-white"></i>
                    </button>
                </div>

                <button type="submit" class="w-full bg-green-500 hover:bg-green-600 text-white font-bold py-3 rounded-md">Change Password</button>
            </form>
        </div>
    </div>

    <!-- SweetAlert2 CSS & JS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function togglePassword(fieldId, eyeId) {
            const passwordField = document.getElementById(fieldId);
            const eyeIcon = document.getElementById(eyeId);
            
            if (passwordField.type === "password") {
                passwordField.type = "text";
                eyeIcon.setAttribute("data-lucide", "eye-off");
            } else {
                passwordField.type = "password";
                eyeIcon.setAttribute("data-lucide", "eye");
            }

            lucide.createIcons(); // Re-render icons after change
        }

        async function changePassword(event) {
            event.preventDefault();
            const newPassword = document.getElementById("newPassword").value;
            const confirmPassword = document.getElementById("confirmPassword").value;
            const email = localStorage.getItem("userEmail");
            console.log(email)

            if (!email) {
                Swal.fire({ icon: "error", title: "Session expired! Please request a new link." });
                return;
            }

            if (!newPassword || !confirmPassword) {
                Swal.fire({ icon: "error", title: "All fields are required!" });
                return;
            }

            if (newPassword !== confirmPassword) {
                Swal.fire({ icon: "error", title: "Passwords do not match!" });
                return;
            }

            if (newPassword.length < 8) {
                Swal.fire({ icon: "error", title: "Password must be at least 8 characters long!" });
                return;
            }

            try {
                const response = await fetch("/user/change-password", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ email, newPassword,confirmPassword })
                });

                const result = await response.json();

                if (result.status === "success") {
                    Swal.fire({ icon: "success", title: "Password changed successfully!" }).then(() => {
                        window.location.href = result.redirectUrl;
                    });
                } else {
                    Swal.fire({ icon: "error", title: result.message || "Failed to change password" });
                }
            } catch (error) {
                console.error("Error changing password:", error);
                Swal.fire({ icon: "error", title: "Something went wrong. Please try again." });
            }
        }

        lucide.createIcons(); // Ensure Lucide icons load properly on page load
    </script>
</body>
</html>
