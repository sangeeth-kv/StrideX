<%- include("partials/header") %>
<style>
  /* Add these styles to your global CSS or in a style tag */
  .bg-primary {
    background-color: #3b82f6;
  }
  .bg-primary-dark {
    background-color: #2563eb;
  }
  .text-primary {
    color: #3b82f6;
  }
  .hover\:bg-primary-dark:hover {
    background-color: #2563eb;
  }
  .hover\:text-primary:hover {
    color: #3b82f6;
  }
</style>
<head>
  <!-- Toastify CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<!-- Toastify JS -->
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

</head>
<main class="bg-gray-50 min-h-screen py-10">
  <div class="container mx-auto px-4">
    <!-- Breadcrumb -->
    <div class="flex items-center text-sm text-gray-500 mb-8">
      <a href="/user/home" class="hover:text-primary transition-colors">Home</a>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-4 w-4 mx-2"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5l7 7-7 7"
        />
      </svg>
      <span>Shop</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-4 w-4 mx-2"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5l7 7-7 7"
        />
      </svg>
      <span class="font-medium text-gray-700">Your Cart</span>
    </div>

    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Cart Items -->
      <div class="lg:w-2/3 w-full">
        <div class="bg-white rounded-xl shadow-sm overflow-hidden">
          <div class="p-6 border-b border-gray-100">
            <h2 class="text-xl font-bold text-gray-800">Shopping Cart</h2>
          </div>

          <div class="overflow-x-auto">
            <table class="w-full">
              <thead class="bg-gray-50 text-xs uppercase">
                <tr>
                  <th
                    scope="col"
                    class="px-6 py-4 text-left text-gray-500 font-medium"
                  >
                    Product
                  </th>
                  <th
                    scope="col"
                    class="px-6 py-4 text-center text-gray-500 font-medium"
                  >
                    Price
                  </th>
                  <th
                    scope="col"
                    class="px-6 py-4 text-center text-gray-500 font-medium"
                  >
                    Quantity
                  </th>
                  <th
                    scope="col"
                    class="px-6 py-4 text-center text-gray-500 font-medium"
                  >
                    Action
                  </th>
                </tr>
              </thead>
              <tbody class="divide-y divide-gray-100">
                <% if (data.length > 0) { %> <% data.forEach((item, index) => {
                %>
                <tr class="hover:bg-gray-50 transition-colors">
                  <td class="px-6 py-4">
                    <div class="flex items-center space-x-4">
                      <img
                        src="<%= item.productImage %>"
                        alt="<%= item.productName %>"
                        class="h-16 w-16 object-cover rounded-md"
                      />
                      <div>
                        <h5 class="font-medium text-gray-800">
                          <a
                            href="cart"
                            class="hover:text-primary transition-colors"
                            ><%= item.productName %></a
                          >
                        </h5>
                        <div class="text-xs text-gray-500 mt-1">
                          <span
                            class="inline-block px-2 py-1 bg-gray-100 rounded-full"
                            ><%= item.category %></span
                          >
                          <span
                            class="inline-block px-2 py-1 bg-gray-100 rounded-full ml-1"
                            ><%= item.brand %></span
                          >
                        </div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="text-center">
                      <div class="font-bold text-gray-800">
                        ₹<span id="subTotal<%= item.productId %>"
                          ><%= item.subtotal %></span
                        >
                      </div>
                      <div class="text-xs text-gray-500 mt-1">
                        <span class="line-through text-red-500"
                          >₹<%= item.regularPrice %></span
                        >
                        <span class="text-green-600 font-semibold"
                          >₹<%= item.salePrice %></span
                        >
                      </div>
                      <% if (item.discount > 0) { %>
                      <div class="text-xs text-green-500">
                        You Save:
                        <div class="text-xs text-green-500">
                          You Save: ₹<%= Math.round(item.discount *
                          item.quantity) %>
                        </div>
                      </div>
                      <% } %>
                    </div>
                  </td>

                  <td class="px-6 py-4">
    <div class="flex items-center justify-center">
        <div class="flex items-center border border-gray-200 rounded-lg overflow-hidden">
            <button class="px-3 py-1 bg-gray-50 hover:bg-gray-100 text-gray-600 transition-colors decrement-button"
                onclick="changeQuantity('<%= item.productId %>', '<%= item.size %>', -1)">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                </svg>
            </button>
            <input class="quantity-input w-12 text-center py-1 border-x border-gray-200 focus:outline-none" 
   id="cartProductQuantity<%= item.productId %>-<%= item.size %>"
   value="<%= item.quantity %>" type="text" readonly data-size="<%= item.size %>">

            <button class="px-3 py-1 bg-gray-50 hover:bg-gray-100 text-gray-600 transition-colors increment-button"
                onclick="changeQuantity('<%= item.productId %>', '<%= item.size %>', 1)">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
            </button>
        </div>
      
    </div>
</td>
<p id="quantityError" class="text-red-500 text-sm mt-2  hidden" style="margin-left:60px;"></p>


                  <td class="px-6 py-4 text-center">
                    <button
                      onclick="confirmRemove('<%= item.productId %>')"
                      class="p-2 text-red-500 hover:text-red-700 hover:bg-red-50 rounded-full transition-colors"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
                        />
                      </svg>
                    </button>
                  </td>
                </tr>
                <% }); %> <% } else { %>
                <tr>
                  <td colspan="4" class="px-6 py-12 text-center">
                    <div class="flex flex-col items-center">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-16 w-16 text-gray-300 mb-4"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"
                        />
                      </svg>
                      <p class="text-xl font-medium text-gray-500 mb-2">
                        Your cart is empty
                      </p>
                      <p class="text-gray-400 mb-6">
                        Looks like you haven't added any products to your cart
                        yet.
                      </p>
                      <a
                        href="/user/shop"
                        class="px-6 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors"
                      >
                        Continue Shopping
                      </a>
                    </div>
                  </td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>

      <!-- Order Summary -->
      <!-- Order Summary -->
      <div class="lg:w-1/3 w-full">
        <div class="bg-white rounded-xl shadow-sm overflow-hidden sticky top-6">
          <div class="p-6 border-b border-gray-100">
            <h2 class="text-xl font-bold text-gray-800">Order Summary</h2>
          </div>

          <div class="p-6">
            <div class="space-y-4">
              <!-- Actual Price -->
              <div class="flex justify-between items-center">
                <span class="text-gray-600">Actual Price</span>
                <span class="text-gray-700 font-medium"
                  >₹<%= actualTotal %></span
                >
              </div>

              <!-- Discount Applied -->
              <div class="flex justify-between items-center">
                <span class="text-gray-600">Discount</span>
                <span class="text-green-600 font-medium"
                  >- <%= Math.round(actualTotal - grandTotal) %></span
                >
              </div>

              <!-- Price After Offer -->
              <div class="flex justify-between items-center border-t pt-4">
                <span class="text-gray-600">Price After Discount</span>
                <span class="text-gray-700 font-medium"
                  >₹<%= grandTotal %></span
                >
              </div>

              <!-- Shipping Charges -->
              <div class="flex justify-between items-center">
                <span class="text-gray-600">Shipping</span>
                <% if (grandTotal >= 1000) { %>
                <span class="text-green-500">Free</span>
                <% } else { %>
                <span class="text-gray-700 font-medium"
                  >₹<%= shippingCharge %></span
                >
                <% } %>
              </div>

              <!-- Final Total -->
              <div class="flex justify-between items-center border-t pt-4">
                <span class="text-lg font-medium text-gray-700"
                  >Final Total</span
                >
                <span class="text-2xl font-bold text-primary"
                  >₹<%= finalTotal %></span
                >
              </div>
            </div>

            <a
              href="/user/checkout"
              class="mt-8 block w-full py-3 px-4 bg-primary hover:bg-primary-dark text-white text-center font-medium rounded-lg transition-colors"
            >
              Proceed to Checkout
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</main>

<script>
    async function confirmRemove(productId) {
  const result = await Swal.fire({
    title: "Are you sure?",
    text: "You won't be able to revert this!",
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#3085d6",
    cancelButtonColor: "#d33",
    confirmButtonText: "Yes, remove it!",
  });

  if (result.isConfirmed) {
    try {
      const response = await fetch(`/user/delete-item/${productId}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
      });
      const data = await response.json();
      if (data.success) {
        location.reload(); // Reload page after successful removal
      }
    } catch (error) {
      console.log(error);
    }
  }
}


  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".increaseQty").forEach((button) => {
      button.addEventListener("click", function () {
        let productId = this.getAttribute("data-product-id");
        let size = this.getAttribute("data-size");
        let quantityElement = document.getElementById(
          `quantity-${productId}-${size}`
        );

        let newQuantity = parseInt(quantityElement.innerText) + 1;
        updateCartQuantity(productId, size, newQuantity, quantityElement);
      });
    });

    document.querySelectorAll(".decreaseQty").forEach((button) => {
      button.addEventListener("click", function () {
        let productId = this.getAttribute("data-product-id");
        let size = this.getAttribute("data-size");
        let quantityElement = document.getElementById(
          `quantity-${productId}-${size}`
        );

        let newQuantity = Math.max(1, parseInt(quantityElement.innerText) - 1);
        updateCartQuantity(productId, size, newQuantity, quantityElement);
      });
    });
  });

  async function changeQuantity(productId, size, change) {
    console.log(`Product ID: ${productId}, Size: ${size}, Change: ${change}`);

    let quantityElement = document.getElementById(`cartProductQuantity${productId}-${size}`);
    
    if (!quantityElement) {
        console.error(`Element with ID cartProductQuantity${productId}-${size} not found`);
        return;
    }

    let currentQuantity = parseInt(quantityElement.value);
    let newQuantity = Math.max(1, currentQuantity + change); // Ensure quantity doesn't go below 1

    if (newQuantity === currentQuantity) return; // No need to update if quantity is the same

    console.log(`Updating cart for Product ID: ${productId} with Quantity: ${newQuantity}`);

    const quantityError = document.getElementById("quantityError");
    quantityError.textContent = "";
quantityError.classList.add("hidden");

if (newQuantity > 6) {
  Toastify({
                text: "You can add upto 6 items",
                duration: 3000,
                gravity: "bottom",
                position: "center",
                backgroundColor: "#FF9800", // Orange color for warnings
                stopOnFocus: true,
            }).showToast();
    return;
}
if (quantityError) {
    quantityError.textContent = "";
    quantityError.classList.add("hidden");
}


    // Send updated quantity to the backend
    await fetch("/user/update-cart-quantity", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({
            productId: productId,
            quantity: newQuantity,
            size: size
        }),
    })
    .then((response) => response.json())
    .then((data) => {
        if (data.success) {
            quantityElement.value = newQuantity; // Update the UI for the clicked product only
            console.log("Cart updated successfully!");
        } else {
            alert(data.message); // Handle errors (e.g., stock limit reached)
        }
    })
    .catch((error) => {
        console.error("Error updating cart:", error);
    });
}

</script>
<!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<%- include("partials/footer") %>
